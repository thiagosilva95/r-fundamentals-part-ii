lista_caracter = list('A', 'Bem-vindo', 'DSA')
lista_caracter
lista_inteiros = list(2,3,4)
lista_inteiros
lista1 <- list(1:10, c('Maria', 'João', 'Alfredo'), rnorm(10))
lista1
?rnorm
# Slicing da lista
lista1[1]
lista1[c(1,2)]
lista1[2]
lista1[[2]][1]
lista1[[2]][1] = 'Monica'
lista1
lista1[[2]][1]
lista1
# Para nomear os elementos - Lista nomeadas
names(lista1) <- c('Inteiros', 'Caracteres', 'Numéricos')
lista1'
lista1
# Para nomear os elementos - Lista nomeadas
names(lista1) <- c('Inteiros', 'Caracteres', 'Numéricos')
# Para nomear os elementos - Lista nomeadas
names(lista1) <- c('Inteiros', 'Caracteres', 'Numéricos')
lista1
vec_num <- 1:4
vec_char <- C('A', 'B', 'C', 'D')
vec_char <- C('A', 'B', 'C', 'D')
vec_char <- c('A', 'B', 'C', 'D')
lista2 <- list(Numeros= vec_num, Letras = vec_char)
lista2
# Nomear diretamente
lista2 <- list(elemento1=3:5, elemento2=c(7.2, 3.5))
lista2
# Trabalhando com elementos específicos
names(lista1) <- c('Inteiros', 'Caracteres', 'Numéricos')
lista1
lista1$Caracteres
lista1$Inteiros
lista1$Numéricos
lista1$Caracteres[2]
vec1 <- c("Macho", "Femea", "Femea", "Macho", "Macho")
vec1
fac_vec1 <- factor(vec1)
fac_vec1
class(fac)
class(fac_vec1)
# Variáveis categóricas nominais
# Não existe uma ordem implícita
animais <- c("Zebra", "Pantera", "Rinoceronte", "Macaco", "Tigre")
animais
class(animais)
fac_animais <- factor(animais)
fac_animais
class(fac_animais)
levels(fac_animais)
#Variáveis categóricas ordinais
# Possuem ordem natural
grad <- c("Mestrado", "Doutorado", "Bacharelado", "Mestrado")
grad
fac_grad <- factor(grad, order = TRUE, levels = c("Doutorado", "Mestrado", "Bacharelado"))
fac_grad
levels(fac_grad)
# Sumarizar os dados fornece uma visão geral sobre o conteúdo
summary(fac_grad)
summary(grad)
vec2 <- c("M", "F", "F", "M", "M", "M", "F", "F", "M", "M")
vec2
fac_vec2 <- factor(vec2)
fac_vec2
levels(fac_vec2)
levels(fac_vec2) <- c("Femea", "Macho")
fac_vec2
summary(fac_vec2)
summary(vec2)
# Mais exemplos
data = c(1,2,2,3,1,2,3,3,1,2,3,3,1)
fdata = factor(data)
fdata
rdata = factor(data, labels = c("I", "II", "III"))
rdata
# Fatores não-ordenados
set1 <- c("AA", "B", "BA", "CC", "CA", "AA")
set1
f.set1 <-factor(set1)
f.set1
is.ordered(f.set1)
df <- read.csv2("etnias.csv", sep = ",")
setwd("F:/projects/R/dsa/RFundamentos/Parte2")
df <- read.csv2("etnias.csv", sep = ",")
df
str(df)
# Níveis dos fatores
levels(df$Etnia)
summary(df$Etnia)
# Plot
plot(df$Idade~df$Etnia, xlab = "Etnia", ylab = "Idade", main)
# Plot
plot(df$Idade~df$Etnia, xlab = "Etnia", ylab = "Idade", main = "Idade por etnia")
summary(lm(Idade~Etnia, data = df))
df
# Convertendo coluna em variável categórica
df$Estado_Civil.cat<- factor(df$Estado_Civil, labels = c("Solteiro", "Casado", "Divorciado"))
df
str(df)
?sample
args(sample)
args(mean)
args(sd)
# Funções Built-in
abs(-43)
sum(c(1:5))
seq(1:5)
sort(rev(c(1:5)))
append(c(1:5),6)
vec1 <- c(1.5, 2.5, 8.4, 3.7, 6.3)
vec2 <- rev(vec1)
vec2
# Funções dentro de funções
plot(rnorm(10))
# Criando funções
myfunc <- function(x) {x + x}
myfunc(10)
class(myf)
class(myfunc())
class(myfunc)
print(valor)
myfunc2 <- function(a, b) {
valor = a ^ b
print(valor)
}
myfunc2(3,6)
myfunc2(3,2)
jogando_dados <- function() {
num <- sample(1:6, size = 1)
num
}
jogando_dados()
jogando_dados()
# Escopo
print(num)
num <- c(1:6)
num
# Funções sem argumentos
vec1 <- (10:13)
vec2 <- c("a", "b", "c", "d")
vec3 <- c(6.5, 9.2, 11.9, 5.1)
myfunc3 <- function(...) {
df = data.frame(cbind(...))
print(df)
}
myfunc3(vec1)
myfunc3(vec2, vec3)
myfunc3(vec1, vec2, vec3)
